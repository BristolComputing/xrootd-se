#
# Configure XRootD security
#

xrootd.seclib libXrdSec.so

sec.protocol /usr/lib64 gsi \
    -dlgpxy:1 \
    -exppxy:=creds \
    -ca:1 \
    -crl:3 \
    -cert:/etc/grid-security/xrd/hostcert.pem \
    -key:/etc/grid-security/xrd/hostkey.pem \
    -certdir:/etc/grid-security/certificates \
    -vomsfun:/usr/lib64/libXrdVoms.so \
    -vomsfunparms:certfmt=raw|grpopt=useall|vos=atlas,cms,dteam,dune,gridpp,lz,mu3e.org,ops,wlcg|grps=/atlas,/cms,/dteam,/dune,/gridpp,/lz,/mu3e,/ops,/wlcg|dbg

xrd.tls /etc/grid-security/xrd/hostcert.pem /etc/grid-security/xrd/hostkey.pem
xrd.tlsca certdir /etc/grid-security/certificates
xrootd.tls capable all -data

acc.audit deny grant
acc.authdb /etc/xrootd/Authfile
acc.authrefresh 60

ofs.authorize 1

macaroons.secretkey /etc/xrootd/macaroon-secret
http.exthandler xrdmacaroons libXrdMacaroons.so
# Enable Macroons- and SciTokens-based mappings; if no token is present, then the GSI certificate will be used.
# this line breaks GSI auth
# ofs.authlib libXrdMacaroons.so libXrdAccSciTokens.so
# but this works (thanks to James Walder, Lancaster University)
ofs.authlib ++ libXrdAccSciTokens.so config=/etc/xrootd/scitokens.cfg
ofs.authlib ++ libXrdMacaroons.so
